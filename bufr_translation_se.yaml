### UNIT CONVERSIONS
# excact-as-possible unit conversion factors
# great source for these fractions: https://unitchefs.com/speed/
# TEMPERATURE
K2C:    &K2C    -2731.5             # K to C*10
# WIND SPEED
ms2kn:  &ms2kn  1.9438444924406046  # m/s to kn
kh2kn:  &kh2kn  0.5399568034557235  # km/h to kn
# LENGTH
#m2ft:   &m2ft   3.2808398950131235  # m to ft
#ft2m:   &ft2m   0.3048
m2m30:  &m2m30  0.03333333333333333 # m  to m/30 
ft2m30: &ft2m30 0.01016             # ft to m/30


timePeriod:
  0:      0s
  -1:     1h
  -3:     3h
  -6:     6h
  -10:    10min
  -12:    12h
  -15:    15h
  -24:    24h
  -25:    25h
  -30:    30min # TODO does this overlap with 30h sometimes???
  -36:    36h
  -60:    1h
  -180:   3h
  -360:   6h
  -720:   12h
  -900:   15h
  -1440:  24h
  -1500:  25h
  -1800:  30h
  -2160:  36h


  ### EXTRA HELPER PARAMETERS
  #TODO use for derived paramters during decoding or remove -> derive_obs.py
  #relativeHumidity:                   [RH_2m_syn,  1s, 1,     0]
  #wetBulbTemperature:
  #  0.05:                             [TW_5cm_syn, 1s, 10, *K2C]
  #  2.0:                              [TW_2m_syn,  1s, 10, *K2C]
  #wetBulbTemperatureAt2M:             [TW_2m_syn,  1s, 10, *K2C]
  #virtualTemperature:
  #  0.05:                             [TV_5cm_syn, 1s, 10, *K2C]
  #  2.0:                              [TV_2m_syn,  1s, 10, *K2C]
  #specificHumidity:                   [SH_2m_syn,  1s,  1,    0]
  #mixingRatio:                        [MR_2m_syn,  1s,  1,    0]
  #mixingHeights:                      [MH_syn,     1s,  1,    0]
  #vapourPressure:                     [VP_2m_syn,  1s,  1,    0]
  #vapourDensity:                      [VD_2m_syn,  1s,  1,    0]

### META INFORMATION (HEIGHT OF SENSORS AND REPLICATION FACTORS)
heightOfSensorAboveLocalGroundOrDeckOfMarinePlatform: ~
depthBelowLandSurface:                                ~
delayedDescriptorReplicationFactor:                   ~
  #TODO apparently not present in DWD BUFRs but could be useful for other data sources in future...
  #representativeHeightOfSensorAboveStation:            ~
  #modificationOfSensorHeightToAnotherValue:            ~
  #heightOfSensorAboveWaterSurface:                     ~
  #nonCoordinateHeight:                                 ~

### SNOW
#TODO units/scale
totalSnowDepth:                     [TOTSNOW_srf_syn, 1s, 100, 0]   # Gesamtschneehöhe [in cm]
depthOfFreshSnow:                   [NEWSNOW_srf_syn, 1s, 100, 0]   # Neuschneehöhe [in cm] im Bezugszeitraum

### PRECIPITATION
#TODO units/scale
totalPrecipitationOrTotalWaterEquivalent: [PRATE_srf_syn,~,1,0]     # Niederschlagsmenge
totalPrecipitationPast1Hour:        [PRATE_srf_1h_syn,1h, 1, 0]
totalPrecipitationPast3Hours:       [PRATE_srf_syn, 3h,   1, 0]
totalPrecipitationPast6Hours:       [PRATE_srf_syn, 6h,   1, 0]
totalPrecipitationPast12Hours:      [PRATE_srf_syn, 12h,  1, 0]
totalPrecipitationPast24Hours:      [PRATE_srf_syn, 24h,  1, 0]     # Niederschlagsmenge der letzten 24 Stunden
totalAccumulatedPrecipitation:      [PRATE_srf_syn, ~,    1, 0]     # Niederschlagsmenge im Bezugszeitraum
durationOfPrecipitation:            [PDUR_srf_syn,  ~,    1, 0]
  #TODO precipitation could also be derived from duration + intensity
  #intensityOfPrecipitation:           [PINT_srf_syn, ~,    1, 0]
  #highestDailyAmountOfPrecipitation:  [PMAX_srf_syn, 24h,  1, 0]
  #TODO might be useful if WW is missing?
  #typeOfPrecipitation:                [PTYPE_srf_syn, ~, 1, 0]
  #formOfPrecipitation:                [PFORM_srf_syn, ~, 1, 0]

### PRESSURE
pressure:                           [GH_1000_syn, 1s, 0.01, 0]      # Luftdruck an der Station
nonCoordinatePressure:              [GH_1000_syn, 1s, 0.01, 0]      # Luftdruck an der Station
pressureReducedToMeanSeaLevel:      [MSL_ms_syn,  1s, 0.01, 0]      # Auf NN reduzierter Luftdruck TODO QFF/QNH?!

### RADIATION / SUN
globalSolarRadiationIntegratedOverPeriodSpecified:  [GLRAD_srf_syn,   ~,    0.001, 0] # Globalstrahlung
globalSolarRadiation24Hours:                        [GLRAD_srf_syn,   24h,  0.001, 0]
globalSolarRadiationIntegratedOver24Hours:          [GLRAD_srf_syn,   24h,  0.001, 0]
longWaveRadiationIntegratedOverPeriodSpecified:     [LONGRAD_srf_syn, ~,    0.001, 0] # Langwellige Strahlung
longWaveRadiationIntegratedOver24Hours:             [LONGRAD_srf_syn, 24h,  0.001, 0] # Langwellige Strahlung
#TODO is net~ really the same as above?
netLongWaveRadiationIntegratedOverPeriodSpecified:  [LONGRAD_srf_syn, ~,    0.001, 0] # Langwellige Strahlung
netLongWaveRadiationIntegratedOver24Hours:          [LONGRAD_srf_syn, 24h,  0.001, 0] # Langwellige Strahlung
diffuseSolarRadiationIntegratedOverPeriodSpecified: [DIFFRAD_srf_syn, ~,    0.001, 0] # Diffusstrahlung
diffuseSolarRadiationIntegratedOver24Hours:         [DIFFRAD_srf_syn, 24h,  0.001, 0] # Diffusstrahlung
totalSunshine:                      [SUNDUR_srf_syn, ~, 1,  0]      # Sonnenscheindauer am Vortag 
sunshineOverPeriodSpecified:        [SUNDUR_srf_syn, ~, 1,  0]      # Sonnenscheindauer am Vortag

### WEATHER / PHENOMENA
presentWeather:                     [WW_syn,  1min, 1, 0]           # Signifikantes Wetter
  #TODO these keys contain characters (CCITT IA5 code), useful?
  #significantWeather:                 [WW_sig_syn,1min, 1, 0]         # Signifikantes Wetter
  #significantRecentWeatherPhenomena:  [WW_sig_syn,1min, 1, 0]         # Signifikantes Wetter
pastWeather1:                       [W1_syn,  ~,    1, 0]           # Wetterverlauf (Typ 1)
pastWeather2:                       [W2_syn,  ~,    1, 0]           # Wetterverlauf (Typ 2)
additionalWeatherPhenomena:         [natWW,   1min, 1, 0]           # Zusätzliches Wetter (Nationale Meldung)
  #TODO some interesting BUFR keys, maybe with potential future usefulness?
  #intensityOfPhenomena:               [PH_int, ~, 1, 0]              #
  #phenomenaOccurrence:                [PH_occ, ~, 1, 0]              # 
  #specialPhenomena:                   [PH_spl, ~, 1, 0]              # 
  #otherWeatherPhenomena:              [PH_oth, ~, 1, 0]              # 
#TODO check if this matches!
generalWeatherIndicatorTafOrMetar:  [WWN_syn, 1min, 1, 0]           # Signifikantes Wetter und Bewölkung

### VISIBILITY
#TODO which of these visibility/optical range parameters should have priority? how do we order them?
meteorologicalOpticalRange:         [MOR_syn,     0s, 0.001, 0]     # Horizontale Sichtweite
minimumMeteorologicalOpticalRange:  [MOR_min_syn, 0s, 0.001, 0]     # Horizontale Sichtweite
maximumMeteorologicalOpticalRange:  [MOR_max_syn, 0s, 0.001, 0]     # Horizontale Sichtweite
horizontalVisibility:               [VIS_syn,     0s, 0.001, 0]     # Horizontale Sichtweite
minimumHorizontalVisibility:        [VIS_min_syn, 0s, 0.001, 0]     # Horizontale Sichtweite
prevailingHorizontalVisibility:     [VIS_pre_syn, 0s, 0.001, 0]     # Horizontale Sichtweite
runwayVisualRangeRvr:               [VIS_run_syn, 0s, 0.001, 0]     # Horizontale Sichtweite

### TEMPERATURE / GROUND
stateOfGround:                      [GS_syn,    1min,  1,    0]     # Erdbodenzustand
soilTemperature:
  -0.05:                            [T_n5cm_syn,  1s, 10, *K2C]     # Erdbodentemperatur -5cm
  -0.1:                             [T_n10cm_syn, 1s, 10, *K2C]     # Erdbodentemperatur -10cm
  -0.2:                             [T_n20cm_syn, 1s, 10, *K2C]     # Erdbodentemperatur -20cm
  -0.5:                             [T_n50cm_syn, 1s, 10, *K2C]     # Erdbodentemperatur -50cm
  -1.0:                             [T_n1m_syn,   1s, 10, *K2C]     # Erdbodentemperatur -1m
  -2.0:                             [T_n2m_syn,   1s, 10, *K2C]     # Erdbodentemperatur -2m
groundTemperature:                  [T_srf_syn,   1s, 10, *K2C]     # Erdbodentemperatur 0cm
  #TODO interesting parameters
  #groundMinimumTemperature
  #groundMinimumTemperatureOfPrecedingNight
  #groundMinimumTemperaturePast12Hours

  #TODO could be useful for other data sources than DWD
  #principalTimeOfDailyReadingInUtcOfMaximumTemperature: ~
  #principalTimeOfDailyReadingInUtcOfMinimumTemperature: ~
  #timeDifference:                                       ~
  #hoursIncluded:                                        ~
  #measurementIntegrationTime:                           ~
  #durationOfTimeRelatingToFollowingValue:

temperature: # in Celsius! 
  0.05:                             [T_5cm_syn, 1s, 10, 0]          # 5cm-Lufttemperatur
  2.0:                              [T_2m_syn,  1s, 10, 0]          # 2m-Lufttemperatur
airTemperature:                     
  0.05:                             [T_5cm_syn, 1s, 10, *K2C]       # 5cm-Lufttemperatur
  2.0:                              [T_2m_syn,  1s, 10, *K2C]       # 2m-Lufttemperatur
airTemperatureAt2M:                 [T_2m_syn,  1s, 10, *K2C]       # 2m-Lufttemperatur   
dewpointTemperature:
  0.05:                             [TD_5cm_syn, 1s, 10, *K2C]      # 5cm-Taupunktstemperatur
  2.0:                              [TD_2m_syn, 1s,  10, *K2C]      # 2m-Taupunktstemperatur
dewpointTemperatureAt2M:            [TD_2m_syn, 1s,  10, *K2C]

maximumTemperatureAt2M:             [Tmax_2m_syn, 12h,    10, *K2C] # 24h-Maximum der 2m-Lufttemperatur
minimumTemperatureAt2M:             [Tmin_2m_syn, 12h,    10, *K2C] # 24h-Minimum der 2m-Lufttemperatur
maximumTemperatureAtHeightAndOverPeriodSpecified:
  0.05:                             [Tmax_5cm_syn, 12h,   10, *K2C] # 24h-Maximum der 5cm-Lufttemperatur
  2.0:                              [Tmax_2m_syn,  12h,   10, *K2C] # 24h-Maximum der 2m-Lufttemperatur
minimumTemperatureAtHeightAndOverPeriodSpecified:
  0.05:                             [Tmin_5cm_syn,12h,    10, *K2C] # 24h-Minimum der 5cm-Lufttemperatur
  2.0:                              [Tmin_2m_syn, 12h,    10, *K2C] # 24h-Minimum der 2m-Lufttemperatur
maximumTemperatureAt2MPast12Hours:  [Tmax_2m_syn,   12h,  10, *K2C]
minimumTemperatureAt2MPast12Hours:  [Tmin_2m_syn,   12h,  10, *K2C]
maximumTemperatureAt2MPast24Hours:  [Tmax_2m_syn,   24h,  10, *K2C]
minimumTemperatureAt2MPast24Hours:  [Tmin_2m_syn,   24h,  10, *K2C]
maximumTemperatureAtHeightSpecifiedPast24Hours:
  0.05:                             [Tmax_5cm_syn,  24h,  10, *K2C]
  2.0:                              [Tmax_2m_syn,   24h,  10, *K2C]
minimumTemperatureAtHeightSpecifiedPast24Hours:
  0.05:                             [Tmin_5cm_syn,  24h,  10, *K2C]
  2.0:                              [Tmin_2m_syn,   24h,  10, *K2C]

### WIND
u:                                  [u_10m_syn, ~, *ms2kn, 0]
uAt10M:                             [u_10m_syn, ~, *ms2kn, 0]
v:                                  [v_10m_syn, ~, *ms2kn, 0]
vAt10M:                             [v_10m_syn, ~, *ms2kn, 0]

  #TODO how/where is the associated wind speed defined?
  #windDirectionAssociatedWithWindSpeedWhichFollows:                 [DIR_10m_syn, ~, 1, 0]
windDirection:                      [DIR_10m_syn, 1min, 1, 0]       # Windrichtung
windDirectionAt10M:                 [DIR_10m_syn, 1min, 1, 0]       # Windrichtung
windSpeed:                          [FFavg_10m_syn, 10min, *ms2kn, 0] # Windgeschwindigkeit 10-Min-Mittel kn
windSpeedAt10M:                     [FFavg_10m_syn, 10min, *ms2kn, 0] # Mittelwind der letzten Stunde
meanWindSpeed:                      [FFavg_10m_syn, 10min, *ms2kn, 0]
minimumMeanWindSpeed:               [FFavg_min_10m_syn,~, *ms2kn,  0]
maximumMeanWindSpeed:               [FFavg_max_10m_syn,~, *ms2kn,  0]
highestGustDuringThe10MinutePeriodPrecedingObservation: [FFmax_10m_10min_syn, 10min, *ms2kn, 0]
meanWindSpeedFrom610minMeasurement: [FFavg_10m_syn,    1h, *ms2kn, 0] # Windgeschwindigkeit 10-Min-Mittel kn
maximumWindGustSpeed:               [FFmax_10m_syn,     ~, *ms2kn, 0]
maximumWindSpeed10MinuteMeanWind:   [FFmax_avg_10m_syn,1h, *ms2kn, 0] # Maximales 10min-Mittel im Bezugszeitraum
  #TODO what are these? how is their duration defined? Different from gust speeds or equal/comparable?
  #maximumInstantaneousWindSpeed:      [FFmax_10m_syn, ~,  *ms2kn, 0]
  #maximumInstantaneousWindSpeedOver10Minutes:  [FFmax_10m_syn, 10min, *ms2kn, 0]

### CLOUDS
  #TODO could these keys be useful in future?
  #cloudIndex:                      [Cindex_syn, 1s, 1,   0]
  #verticalSignificanceSurfaceObservations: [VERTSIG_surf_syn, 1s, 1, 0]
  
  #TODO implement in derive_obs.py
  #ClNCmNChN: [CLCMCH_syn,  ~, 1, 0]  # Wolkenarten in den Stockwerken                   (zB: Cu3Ac4Cs51Cb, 1Cu)
  #ClNCmNChN: [CLCMCH_syn,  ~, 1, 0]  # -> Wolkenmenegen in den Stockwerken              (zB: 3451, 1///)
  #NC1XXX:    [CL1_syn,     ~, 1, 0]  # unterste Wolkenschicht Bedeckung/Art/Untergrenze (zB: 2ST020 oder OBS///)
  #NC2XXX:    [CL2_syn,     ~, 1, 0]  # 2.Wolkenschicht                                  (zB: 4AC100)
  #NC3XXX:    [CL3_syn,     ~, 1, 0]  # 3.Wolkenschicht                                  (zB: 5CS300)
  #NC4XXX:    [CL4_syn,     ~, 1, 0]  # 4.Wolkenschicht                                  (zB: 2CB080)
  #NC1XXX:    [CL?_syn,     ~, 1, 0]  # Wolkenschicht Bedeckung+Untergrenze              (zB: 2020, 5300, 2080)

# helper key to find out correct cloud layers and cloud ceiling
verticalSignificanceSurfaceObservations:  ~

# helper key, not part of BUFR tables
cloudBase:
  1:                                [CB1_syn,     1s, 1, 0]
  2:                                [CB2_syn,     1s, 1, 0]
  3:                                [CB3_syn,     1s, 1, 0]
  4:                                [CB4_syn,     1s, 1, 0]
  #TODO see obs.cfg for cloud level thresholds

cloudAmount:
  0:                                [TCC_total_syn, 1s,   1,  0]    # Bedeckungsgrad gesamt
  C:                                [TCC_ceiling_syn, 1s, 1,  0]    # Bedeckungsgrad der niedrigsten Schicht (Nh)
  L:                                [TCC_LC_syn,    1s,   1,  0]    # Bedeckungsgrad der niedrigen Wolken
  M:                                [TCC_MC_syn,    1s,   1,  0]    # Bedeckungsgrad der mitteleren Wolken
  H:                                [TCC_HC_syn,    1s,   1,  0]    # Bedeckungsgrad der hohen Wolken
  1:                                [TCC_1C_syn,    1s,   1,  0]    # Bedeckungsgrad 1. Schicht
  2:                                [TCC_2C_syn,    1s,   1,  0]    # Bedeckungsgrad 2. Schicht
  3:                                [TCC_3C_syn,    1s,   1,  0]    # Bedeckungsgrad 3. Schicht
  4:                                [TCC_4C_syn,    1s,   1,  0]    # Bedeckungsgrad 4. Schicht (Cb oder 4. Automat)

cloudCoverTotal:                    [TCC_total_syn, 1s, 0.08, 0]    # Bedeckungsgrad gesamt

heightOfBaseOfCloud:                [HLC_syn,       1s,*m2m30, 0]   # Höhe der tiefen Wolken (tiefste Wolkenschicht)

# usually not used by DWD
amountOfLowClouds:                  [TCC_LC_syn,    1s,   1,   0]   # Bedeckungsgrad der niedrigen Wolken
amountOfMiddleClouds:               [TCC_MC_syn,    1s,   1,   0]   # Bedeckungsgrad der mitteleren Wolken
amountOfHighClouds:                 [TCC_HC_syn,    1s,   1,   0]   # Bedeckungsgrad der hohen Wolken
